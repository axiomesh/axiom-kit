// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.4
// source: transaction.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// use string to replace big.Int
type BigInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BigInt) Reset() {
	*x = BigInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigInt) ProtoMessage() {}

func (x *BigInt) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigInt.ProtoReflect.Descriptor instead.
func (*BigInt) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *BigInt) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner *TxDataVariant `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	Time  int64          `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetInner() *TxDataVariant {
	if x != nil {
		return x.Inner
	}
	return nil
}

func (x *Transaction) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type TxDataVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TxDataType:
	//
	//	*TxDataVariant_AccessListTx
	//	*TxDataVariant_LegacyTx
	//	*TxDataVariant_DynamicFeeTx
	//	*TxDataVariant_IncentiveTx
	TxDataType isTxDataVariant_TxDataType `protobuf_oneof:"tx_data_type"`
}

func (x *TxDataVariant) Reset() {
	*x = TxDataVariant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxDataVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDataVariant) ProtoMessage() {}

func (x *TxDataVariant) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDataVariant.ProtoReflect.Descriptor instead.
func (*TxDataVariant) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{2}
}

func (m *TxDataVariant) GetTxDataType() isTxDataVariant_TxDataType {
	if m != nil {
		return m.TxDataType
	}
	return nil
}

func (x *TxDataVariant) GetAccessListTx() *AccessListTx {
	if x, ok := x.GetTxDataType().(*TxDataVariant_AccessListTx); ok {
		return x.AccessListTx
	}
	return nil
}

func (x *TxDataVariant) GetLegacyTx() *LegacyTx {
	if x, ok := x.GetTxDataType().(*TxDataVariant_LegacyTx); ok {
		return x.LegacyTx
	}
	return nil
}

func (x *TxDataVariant) GetDynamicFeeTx() *DynamicFeeTx {
	if x, ok := x.GetTxDataType().(*TxDataVariant_DynamicFeeTx); ok {
		return x.DynamicFeeTx
	}
	return nil
}

func (x *TxDataVariant) GetIncentiveTx() *IncentiveTx {
	if x, ok := x.GetTxDataType().(*TxDataVariant_IncentiveTx); ok {
		return x.IncentiveTx
	}
	return nil
}

type isTxDataVariant_TxDataType interface {
	isTxDataVariant_TxDataType()
}

type TxDataVariant_AccessListTx struct {
	AccessListTx *AccessListTx `protobuf:"bytes,1,opt,name=access_list_tx,json=accessListTx,proto3,oneof"`
}

type TxDataVariant_LegacyTx struct {
	LegacyTx *LegacyTx `protobuf:"bytes,2,opt,name=legacy_tx,json=legacyTx,proto3,oneof"`
}

type TxDataVariant_DynamicFeeTx struct {
	DynamicFeeTx *DynamicFeeTx `protobuf:"bytes,3,opt,name=dynamic_fee_tx,json=dynamicFeeTx,proto3,oneof"`
}

type TxDataVariant_IncentiveTx struct {
	IncentiveTx *IncentiveTx `protobuf:"bytes,4,opt,name=incentive_tx,json=incentiveTx,proto3,oneof"`
}

func (*TxDataVariant_AccessListTx) isTxDataVariant_TxDataType() {}

func (*TxDataVariant_LegacyTx) isTxDataVariant_TxDataType() {}

func (*TxDataVariant_DynamicFeeTx) isTxDataVariant_TxDataType() {}

func (*TxDataVariant_IncentiveTx) isTxDataVariant_TxDataType() {}

type AccessListTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId    *BigInt     `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Nonce      uint64      `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice   *BigInt     `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Gas        uint64      `protobuf:"varint,4,opt,name=gas,proto3" json:"gas,omitempty"`
	To         []byte      `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	Value      *BigInt     `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Data       []byte      `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	AccessList *AccessList `protobuf:"bytes,8,opt,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	V          *BigInt     `protobuf:"bytes,9,opt,name=v,proto3" json:"v,omitempty"`
	R          *BigInt     `protobuf:"bytes,10,opt,name=r,proto3" json:"r,omitempty"`
	S          *BigInt     `protobuf:"bytes,11,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *AccessListTx) Reset() {
	*x = AccessListTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessListTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListTx) ProtoMessage() {}

func (x *AccessListTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListTx.ProtoReflect.Descriptor instead.
func (*AccessListTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *AccessListTx) GetChainId() *BigInt {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *AccessListTx) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AccessListTx) GetGasPrice() *BigInt {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *AccessListTx) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *AccessListTx) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *AccessListTx) GetValue() *BigInt {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AccessListTx) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AccessListTx) GetAccessList() *AccessList {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *AccessListTx) GetV() *BigInt {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *AccessListTx) GetR() *BigInt {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *AccessListTx) GetS() *BigInt {
	if x != nil {
		return x.S
	}
	return nil
}

type LegacyTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint64  `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice *BigInt `protobuf:"bytes,2,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Gas      uint64  `protobuf:"varint,3,opt,name=gas,proto3" json:"gas,omitempty"`
	To       []byte  `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Value    *BigInt `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Data     []byte  `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	V        *BigInt `protobuf:"bytes,7,opt,name=v,proto3" json:"v,omitempty"`
	R        *BigInt `protobuf:"bytes,8,opt,name=r,proto3" json:"r,omitempty"`
	S        *BigInt `protobuf:"bytes,9,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *LegacyTx) Reset() {
	*x = LegacyTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyTx) ProtoMessage() {}

func (x *LegacyTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyTx.ProtoReflect.Descriptor instead.
func (*LegacyTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *LegacyTx) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *LegacyTx) GetGasPrice() *BigInt {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *LegacyTx) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *LegacyTx) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *LegacyTx) GetValue() *BigInt {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *LegacyTx) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LegacyTx) GetV() *BigInt {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *LegacyTx) GetR() *BigInt {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *LegacyTx) GetS() *BigInt {
	if x != nil {
		return x.S
	}
	return nil
}

type DynamicFeeTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId    *BigInt     `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Nonce      uint64      `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasTipCap  *BigInt     `protobuf:"bytes,3,opt,name=gas_tip_cap,json=gasTipCap,proto3" json:"gas_tip_cap,omitempty"`
	GasFeeCap  *BigInt     `protobuf:"bytes,4,opt,name=gas_fee_cap,json=gasFeeCap,proto3" json:"gas_fee_cap,omitempty"`
	Gas        uint64      `protobuf:"varint,5,opt,name=gas,proto3" json:"gas,omitempty"`
	To         []byte      `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
	Value      *BigInt     `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Data       []byte      `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	AccessList *AccessList `protobuf:"bytes,9,opt,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	V          *BigInt     `protobuf:"bytes,10,opt,name=v,proto3" json:"v,omitempty"`
	R          *BigInt     `protobuf:"bytes,11,opt,name=r,proto3" json:"r,omitempty"`
	S          *BigInt     `protobuf:"bytes,12,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *DynamicFeeTx) Reset() {
	*x = DynamicFeeTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicFeeTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicFeeTx) ProtoMessage() {}

func (x *DynamicFeeTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicFeeTx.ProtoReflect.Descriptor instead.
func (*DynamicFeeTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *DynamicFeeTx) GetChainId() *BigInt {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *DynamicFeeTx) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DynamicFeeTx) GetGasTipCap() *BigInt {
	if x != nil {
		return x.GasTipCap
	}
	return nil
}

func (x *DynamicFeeTx) GetGasFeeCap() *BigInt {
	if x != nil {
		return x.GasFeeCap
	}
	return nil
}

func (x *DynamicFeeTx) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *DynamicFeeTx) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *DynamicFeeTx) GetValue() *BigInt {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DynamicFeeTx) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DynamicFeeTx) GetAccessList() *AccessList {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *DynamicFeeTx) GetV() *BigInt {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *DynamicFeeTx) GetR() *BigInt {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *DynamicFeeTx) GetS() *BigInt {
	if x != nil {
		return x.S
	}
	return nil
}

type IncentiveTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId          *BigInt     `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Nonce            uint64      `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasTipCap        *BigInt     `protobuf:"bytes,3,opt,name=gas_tip_cap,json=gasTipCap,proto3" json:"gas_tip_cap,omitempty"`
	GasFeeCap        *BigInt     `protobuf:"bytes,4,opt,name=gas_fee_cap,json=gasFeeCap,proto3" json:"gas_fee_cap,omitempty"`
	Gas              uint64      `protobuf:"varint,5,opt,name=gas,proto3" json:"gas,omitempty"`
	To               []byte      `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
	Value            *BigInt     `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Data             []byte      `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	AccessList       *AccessList `protobuf:"bytes,9,opt,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	IncentiveAddress []byte      `protobuf:"bytes,10,opt,name=incentive_address,json=incentiveAddress,proto3" json:"incentive_address,omitempty"`
	V                *BigInt     `protobuf:"bytes,11,opt,name=v,proto3" json:"v,omitempty"`
	R                *BigInt     `protobuf:"bytes,12,opt,name=r,proto3" json:"r,omitempty"`
	S                *BigInt     `protobuf:"bytes,13,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *IncentiveTx) Reset() {
	*x = IncentiveTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncentiveTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncentiveTx) ProtoMessage() {}

func (x *IncentiveTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncentiveTx.ProtoReflect.Descriptor instead.
func (*IncentiveTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *IncentiveTx) GetChainId() *BigInt {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *IncentiveTx) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *IncentiveTx) GetGasTipCap() *BigInt {
	if x != nil {
		return x.GasTipCap
	}
	return nil
}

func (x *IncentiveTx) GetGasFeeCap() *BigInt {
	if x != nil {
		return x.GasFeeCap
	}
	return nil
}

func (x *IncentiveTx) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *IncentiveTx) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *IncentiveTx) GetValue() *BigInt {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *IncentiveTx) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IncentiveTx) GetAccessList() *AccessList {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *IncentiveTx) GetIncentiveAddress() []byte {
	if x != nil {
		return x.IncentiveAddress
	}
	return nil
}

func (x *IncentiveTx) GetV() *BigInt {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *IncentiveTx) GetR() *BigInt {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *IncentiveTx) GetS() *BigInt {
	if x != nil {
		return x.S
	}
	return nil
}

type AccessTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StorageKeys [][]byte `protobuf:"bytes,2,rep,name=storage_keys,json=storageKeys,proto3" json:"storage_keys,omitempty"`
}

func (x *AccessTuple) Reset() {
	*x = AccessTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessTuple) ProtoMessage() {}

func (x *AccessTuple) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessTuple.ProtoReflect.Descriptor instead.
func (*AccessTuple) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *AccessTuple) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AccessTuple) GetStorageKeys() [][]byte {
	if x != nil {
		return x.StorageKeys
	}
	return nil
}

// AccessList，EIP-2930
type AccessList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessTuples []*AccessTuple `protobuf:"bytes,1,rep,name=access_tuples,json=accessTuples,proto3" json:"access_tuples,omitempty"`
}

func (x *AccessList) Reset() {
	*x = AccessList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessList) ProtoMessage() {}

func (x *AccessList) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessList.ProtoReflect.Descriptor instead.
func (*AccessList) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *AccessList) GetAccessTuples() []*AccessTuple {
	if x != nil {
		return x.AccessTuples
	}
	return nil
}

var File_transaction_proto protoreflect.FileDescriptor

var file_transaction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x1e, 0x0a, 0x06, 0x42, 0x69, 0x67, 0x49, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x44, 0x61, 0x74,
	0x61, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x0d, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x12,
	0x2b, 0x0a, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x54, 0x78,
	0x48, 0x00, 0x52, 0x08, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x54, 0x78, 0x12, 0x38, 0x0a, 0x0e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x46, 0x65, 0x65, 0x54, 0x78, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x46, 0x65, 0x65, 0x54, 0x78, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x65, 0x6e, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x54, 0x78, 0x48, 0x00, 0x52,
	0x0b, 0x69, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x54, 0x78, 0x42, 0x0e, 0x0a, 0x0c,
	0x74, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xcb, 0x02, 0x0a,
	0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x12, 0x25, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x67, 0x61,
	0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x01,
	0x76, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67,
	0x49, 0x6e, 0x74, 0x52, 0x01, 0x76, 0x12, 0x18, 0x0a, 0x01, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x72,
	0x12, 0x18, 0x0a, 0x01, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x08, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x54, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x08, 0x67, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67,
	0x49, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x01, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x76, 0x12, 0x18, 0x0a, 0x01, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52,
	0x01, 0x72, 0x12, 0x18, 0x0a, 0x01, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x73, 0x22, 0xfa, 0x02, 0x0a,
	0x0c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x65, 0x65, 0x54, 0x78, 0x12, 0x25, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x67, 0x61,
	0x73, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x09, 0x67, 0x61, 0x73,
	0x54, 0x69, 0x70, 0x43, 0x61, 0x70, 0x12, 0x2a, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x09, 0x67, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43,
	0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x67, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x01, 0x76,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49,
	0x6e, 0x74, 0x52, 0x01, 0x76, 0x12, 0x18, 0x0a, 0x01, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x72, 0x12,
	0x18, 0x0a, 0x01, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x0b, 0x49, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x54, 0x78, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x74, 0x69,
	0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x09, 0x67, 0x61, 0x73, 0x54, 0x69, 0x70, 0x43,
	0x61, 0x70, 0x12, 0x2a, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x61,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67,
	0x49, 0x6e, 0x74, 0x52, 0x09, 0x67, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x65, 0x6e,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x01, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x76, 0x12, 0x18,
	0x0a, 0x01, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x72, 0x12, 0x18, 0x0a, 0x01, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52,
	0x01, 0x73, 0x22, 0x4a, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x42,
	0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x75, 0x70, 0x6c, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c,
	0x65, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData = file_transaction_proto_rawDesc
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_transaction_proto_rawDescData)
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_transaction_proto_goTypes = []interface{}{
	(*BigInt)(nil),        // 0: pb.BigInt
	(*Transaction)(nil),   // 1: pb.Transaction
	(*TxDataVariant)(nil), // 2: pb.TxDataVariant
	(*AccessListTx)(nil),  // 3: pb.AccessListTx
	(*LegacyTx)(nil),      // 4: pb.LegacyTx
	(*DynamicFeeTx)(nil),  // 5: pb.DynamicFeeTx
	(*IncentiveTx)(nil),   // 6: pb.IncentiveTx
	(*AccessTuple)(nil),   // 7: pb.AccessTuple
	(*AccessList)(nil),    // 8: pb.AccessList
}
var file_transaction_proto_depIdxs = []int32{
	2,  // 0: pb.Transaction.inner:type_name -> pb.TxDataVariant
	3,  // 1: pb.TxDataVariant.access_list_tx:type_name -> pb.AccessListTx
	4,  // 2: pb.TxDataVariant.legacy_tx:type_name -> pb.LegacyTx
	5,  // 3: pb.TxDataVariant.dynamic_fee_tx:type_name -> pb.DynamicFeeTx
	6,  // 4: pb.TxDataVariant.incentive_tx:type_name -> pb.IncentiveTx
	0,  // 5: pb.AccessListTx.chain_id:type_name -> pb.BigInt
	0,  // 6: pb.AccessListTx.gas_price:type_name -> pb.BigInt
	0,  // 7: pb.AccessListTx.value:type_name -> pb.BigInt
	8,  // 8: pb.AccessListTx.access_list:type_name -> pb.AccessList
	0,  // 9: pb.AccessListTx.v:type_name -> pb.BigInt
	0,  // 10: pb.AccessListTx.r:type_name -> pb.BigInt
	0,  // 11: pb.AccessListTx.s:type_name -> pb.BigInt
	0,  // 12: pb.LegacyTx.gas_price:type_name -> pb.BigInt
	0,  // 13: pb.LegacyTx.value:type_name -> pb.BigInt
	0,  // 14: pb.LegacyTx.v:type_name -> pb.BigInt
	0,  // 15: pb.LegacyTx.r:type_name -> pb.BigInt
	0,  // 16: pb.LegacyTx.s:type_name -> pb.BigInt
	0,  // 17: pb.DynamicFeeTx.chain_id:type_name -> pb.BigInt
	0,  // 18: pb.DynamicFeeTx.gas_tip_cap:type_name -> pb.BigInt
	0,  // 19: pb.DynamicFeeTx.gas_fee_cap:type_name -> pb.BigInt
	0,  // 20: pb.DynamicFeeTx.value:type_name -> pb.BigInt
	8,  // 21: pb.DynamicFeeTx.access_list:type_name -> pb.AccessList
	0,  // 22: pb.DynamicFeeTx.v:type_name -> pb.BigInt
	0,  // 23: pb.DynamicFeeTx.r:type_name -> pb.BigInt
	0,  // 24: pb.DynamicFeeTx.s:type_name -> pb.BigInt
	0,  // 25: pb.IncentiveTx.chain_id:type_name -> pb.BigInt
	0,  // 26: pb.IncentiveTx.gas_tip_cap:type_name -> pb.BigInt
	0,  // 27: pb.IncentiveTx.gas_fee_cap:type_name -> pb.BigInt
	0,  // 28: pb.IncentiveTx.value:type_name -> pb.BigInt
	8,  // 29: pb.IncentiveTx.access_list:type_name -> pb.AccessList
	0,  // 30: pb.IncentiveTx.v:type_name -> pb.BigInt
	0,  // 31: pb.IncentiveTx.r:type_name -> pb.BigInt
	0,  // 32: pb.IncentiveTx.s:type_name -> pb.BigInt
	7,  // 33: pb.AccessList.access_tuples:type_name -> pb.AccessTuple
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxDataVariant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessListTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicFeeTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncentiveTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transaction_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TxDataVariant_AccessListTx)(nil),
		(*TxDataVariant_LegacyTx)(nil),
		(*TxDataVariant_DynamicFeeTx)(nil),
		(*TxDataVariant_IncentiveTx)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_rawDesc = nil
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}
